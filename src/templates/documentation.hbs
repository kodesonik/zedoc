<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}} - API Documentation</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=JetBrains+Mono:wght@400;500&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css" rel="stylesheet">
    <style>
        {{{themeCSS}}}
        {{{fontCSS}}}
        {{{sidebarCSS}}}
        {{{brandingCSS}}}
        
        /* Navigation improvements */
        .nav-section {
            margin-bottom: 0.5rem;
        }
        
        .nav-title {
            font-weight: 600;
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            color: var(--light-text-secondary);
            margin-bottom: 0.75rem;
            padding: 0.75rem;
            border-bottom: 1px solid var(--light-border);
            cursor: pointer;
            transition: all 0.2s ease;
            user-select: none;
            border-radius: 6px;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        
        .nav-title:hover {
            background-color: var(--light-hover);
            color: var(--light-accent);
        }
        
        .nav-title.active {
            background-color: var(--light-accent);
            color: white;
            border-color: var(--light-accent);
        }
        
        .nav-title.collapsible {
            margin-bottom: 0;
        }
        
        .collapse-icon {
            font-size: 0.75rem;
            transition: transform 0.2s ease;
            opacity: 0.7;
        }
        
        .nav-title:not(.collapsed) .collapse-icon {
            transform: rotate(90deg);
        }
        
        .nav-modules {
            overflow: hidden;
            transition: max-height 0.3s ease, opacity 0.2s ease;
            padding-left: 0.75rem;
            border-left: 2px solid var(--light-border);
            margin-left: 0.75rem;
            margin-bottom: 0.75rem;
        }
        
        .nav-modules.collapsed {
            max-height: 0;
            opacity: 0;
            margin-bottom: 0;
        }
        
        .nav-modules:not(.collapsed) {
            max-height: 500px;
            opacity: 1;
        }
        
        .nav-item {
            display: block;
            padding: 0.5rem 0.75rem;
            margin-bottom: 0.25rem;
            color: var(--light-text);
            text-decoration: none;
            border-radius: 6px;
            font-size: 0.875rem;
            transition: all 0.2s ease;
        }
        
        .nav-item:hover {
            background-color: var(--light-hover);
            color: var(--light-text);
            text-decoration: none;
        }
        
        .nav-item.active {
            background-color: var(--light-accent);
            color: white;
            font-weight: 500;
        }
        
        .nav-item .module-name {
            font-weight: 500;
        }
        
        .nav-item .endpoint-count {
            font-size: 0.75rem;
            opacity: 0.7;
            font-weight: 400;
            margin-left: auto;
        }
        
        /* Dark theme navigation */
        body.dark .nav-title {
            color: var(--dark-text-secondary);
            border-bottom-color: var(--dark-border);
        }
        
        body.dark .nav-title:hover {
            background-color: var(--dark-hover);
            color: var(--dark-accent);
        }
        
        body.dark .nav-title.active {
            background-color: var(--dark-accent);
            color: white;
            border-color: var(--dark-accent);
        }
        
        body.dark .nav-modules {
            border-left-color: var(--dark-border);
        }
        
        body.dark .nav-item {
            color: var(--dark-text);
        }
        
        body.dark .nav-item:hover {
            background-color: var(--dark-hover);
            color: var(--dark-text);
        }
        
        body.dark .nav-item.active {
            background-color: var(--dark-accent);
            color: white;
        }
        
        /* Smooth scroll behavior */
        html {
            scroll-behavior: smooth;
        }
        
        /* Scroll offset for fixed headers */
        [id] {
            scroll-margin-top: 2rem;
        }
        
        /* Header controls */
        .header-controls {
            display: flex;
            gap: 0.5rem;
            align-items: center;
        }
        
        .expand-all-btn {
            background: none;
            border: 1px solid var(--light-border);
            border-radius: 4px;
            padding: 0.25rem 0.5rem;
            cursor: pointer;
            font-size: 0.875rem;
            color: var(--light-text-secondary);
            transition: all 0.2s ease;
        }
        
        .expand-all-btn:hover {
            background-color: var(--light-hover);
            border-color: var(--light-accent);
            color: var(--light-accent);
        }
        
        body.dark .expand-all-btn {
            border-color: var(--dark-border);
            color: var(--dark-text-secondary);
        }
        
        body.dark .expand-all-btn:hover {
            background-color: var(--dark-hover);
            border-color: var(--dark-accent);
            color: var(--dark-accent);
        }
    </style>
</head>
<body class="light">
    <button class="mobile-menu-btn">☰</button>
    
    <div class="container">
        <!-- Sidebar -->
        <nav class="sidebar">
            <div class="sidebar-header">
                <div class="header-top">
                    <div class="logo">
                        {{#if branding.logo}}
                            {{{headerLogoHTML}}}
                        {{else}}
                            {{title}}
                        {{/if}}
                    </div>
                    <div class="header-controls">
                        <button class="expand-all-btn" title="Expand all sections">⊞</button>
                        <button class="theme-toggle">🌙</button>
                    </div>
                </div>
                <div class="subtitle">API Documentation</div>
                {{#if version}}
                <div class="version-badge">v{{version}}</div>
                {{/if}}
            </div>
            
            <!-- Search and Filter -->
            <div class="search-container">
                <input type="text" class="search-input" placeholder="Search modules and endpoints..." />
                <div class="role-filter">
                    <label class="role-filter-label">Filter by tag:</label>
                    <div class="role-buttons">
                        <button class="role-btn active" data-role="all">All</button>
                        {{#each tags}}
                        <button class="role-btn" data-role="{{this}}">{{this}}</button>
                        {{/each}}
                    </div>
                </div>
            </div>

            <!-- Navigation Sections -->
            {{#if sections}}
                {{#each sections}}
                <div class="nav-section" data-section="{{id}}">
                    <div class="nav-title collapsible" data-target="#{{sectionId id}}" role="button" tabindex="0" aria-expanded="false" aria-controls="modules-{{id}}">
                        <span class="section-name">{{name}}</span>
                        <span class="collapse-icon" aria-hidden="true">▶</span>
                    </div>
                    <div class="nav-modules collapsed" id="modules-{{id}}" role="group" aria-labelledby="section-{{id}}">
                        {{#each modules}}
                        <a href="#{{moduleId ../id id}}" class="nav-item">
                            <span class="module-name">{{name}}</span>
                        </a>
                        {{/each}}
                    </div>
                </div>
                {{/each}}
            {{else}}
                <!-- Fallback for non-structured mode -->
                <div class="nav-section">
                    <div class="nav-title">Endpoints</div>
                    <div class="nav-modules">
                        {{#each endpoints}}
                        <a href="#{{endpointId this}}" class="nav-item">{{method}} {{path}}</a>
                        {{/each}}
                    </div>
                </div>
            {{/if}}
        </nav>

        <!-- Main Content -->
        <main class="main-content">
            <div class="header">
                <h1 class="page-title">{{title}} API</h1>
                {{#if description}}
                <p class="page-description">{{description}}</p>
                {{/if}}
            </div>

            <!-- Getting Started Section -->
            <section id="getting-started" class="module-section">
                <h2 class="module-title">Getting Started</h2>
                <div class="endpoint-card">
                    <div class="endpoint-details expanded">
                        <div class="detail-section">
                            <h4 class="detail-title">Base URL</h4>
                            <div class="code-block">{{baseUrl}}</div>
                        </div>
                        <div class="detail-section">
                            <h4 class="detail-title">Content Type</h4>
                            <div class="code-block">application/json</div>
                        </div>
                        {{#if version}}
                        <div class="detail-section">
                            <h4 class="detail-title">API Version</h4>
                            <p>Current version: <code>{{version}}</code></p>
                        </div>
                        {{/if}}
                        {{#if environment}}
                        <div class="detail-section">
                            <h4 class="detail-title">Environment</h4>
                            {{{environmentHTML}}}
                        </div>
                        {{/if}}
                    </div>
                </div>
            </section>

            <!-- Structured Mode: Sections and Modules -->
            {{#if sections}}
                {{#each sections}}
                <section id="{{sectionId id}}" class="section">
                    <h2 class="section-title">{{name}}</h2>
                    {{#if description}}
                    <p class="section-description">{{description}}</p>
                    {{/if}}
                    
                    {{#each modules}}
                    <section id="{{moduleId ../id id}}" class="module-section">
                        <h3 class="module-title">{{name}}</h3>
                        {{#if description}}
                        <p class="module-description">{{description}}</p>
                        {{/if}}
                        
                        {{#each endpoints}}
                        <div id="{{structuredEndpointId ../../id ../id this}}" class="endpoint-card" data-tags="{{formatTags tags}}">
                            <div class="endpoint-header">
                                <span class="method-badge method-{{lowercase method}}">{{method}}</span>
                                <span class="endpoint-path">{{path}}</span>
                                <span class="endpoint-summary">{{summary}}</span>
                                <button class="try-button" data-method="{{method}}" data-path="{{path}}" data-endpoint-id="{{structuredEndpointId ../../id ../id this}}">Try</button>
                            </div>
                            <div class="endpoint-details">
                                {{#if description}}
                                <div class="detail-section">
                                    <h4 class="detail-title">Description</h4>
                                    <p>{{description}}</p>
                                </div>
                                {{/if}}
                                
                                <div class="detail-section">
                                    <h4 class="detail-title">Authentication</h4>
                                    {{#if requiresAuth}}
                                    <p>🔒 Authentication Required</p>
                                    {{else}}
                                    <p>🌐 Public Endpoint</p>
                                    {{/if}}
                                </div>
                                
                                {{#if tags}}
                                <div class="detail-section">
                                    <h4 class="detail-title">Tags</h4>
                                    <p>{{formatTags tags}}</p>
                                </div>
                                {{/if}}
                                
                                <div class="detail-section">
                                    <h4 class="detail-title">Request URL</h4>
                                    <div class="code-block">{{method}} {{../../../baseUrl}}{{path}}</div>
                                </div>
                                
                                {{#if parameters}}
                                <div class="detail-section">
                                    <h4 class="detail-title">Parameters</h4>
                                    <div class="code-block json-code">
                                        <pre><code class="language-json">{{json parameters}}</code></pre>
                                    </div>
                                </div>
                                {{/if}}
                                
                                {{#if requestHeaders}}
                                <div class="detail-section">
                                    <h4 class="detail-title">Request Headers</h4>
                                    <div class="code-block json-code">
                                        <pre><code class="language-json">{{json requestHeaders}}</code></pre>
                                    </div>
                                </div>
                                {{/if}}
                                
                                {{#if requestBody}}
                                <div class="detail-section">
                                    <h4 class="detail-title">Request Body</h4>
                                    <div class="code-block json-code">
                                        <pre><code class="language-json">{{json requestBody}}</code></pre>
                                    </div>
                                </div>
                                {{/if}}
                                
                                {{#if requestExamples}}
                                <div class="detail-section">
                                    <h4 class="detail-title">Request Examples</h4>
                                    {{#each requestExamples}}
                                    <div class="code-block json-code">
                                        <pre><code class="language-json">{{json this}}</code></pre>
                                    </div>
                                    {{/each}}
                                </div>
                                {{/if}}
                                
                                {{#if successResponse}}
                                <div class="detail-section">
                                    <h4 class="detail-title">✅ Success Response</h4>
                                    <div class="code-block json-code">
                                        <pre><code class="language-json">{{json successResponse}}</code></pre>
                                    </div>
                                </div>
                                {{/if}}
                                
                                {{#if responseExamples}}
                                <div class="detail-section">
                                    <h4 class="detail-title">Response Examples</h4>
                                    {{#each responseExamples}}
                                    <div class="code-block json-code">
                                        <pre><code class="language-json">{{json this}}</code></pre>
                                    </div>
                                    {{/each}}
                                </div>
                                {{/if}}
                                
                                {{#if errorResponses}}
                                <div class="detail-section">
                                    <h4 class="detail-title">❌ Error Responses</h4>
                                    {{#each errorResponses}}
                                    <div class="error-response">
                                        <h5 class="error-status">{{status}} - {{description}}</h5>
                                        <div class="code-block json-code">
                                            <pre><code class="language-json">{{json this}}</code></pre>
                                        </div>
                                    </div>
                                    {{/each}}
                                </div>
                                {{/if}}
                            </div>
                        </div>
                        {{/each}}
                    </section>
                    {{/each}}
                </section>
                {{/each}}
            {{else}}
                <!-- Fallback: Traditional Swagger Mode -->
                {{#each endpoints}}
                <section id="{{endpointId this}}" class="module-section">
                    <div class="endpoint-card" data-tags="{{formatTags tags}}">
                        <div class="endpoint-header">
                            <span class="method-badge method-{{lowercase method}}">{{method}}</span>
                            <span class="endpoint-path">{{path}}</span>
                            <span class="endpoint-summary">{{summary}}</span>
                            <button class="try-button" data-method="{{method}}" data-path="{{path}}" data-endpoint-id="{{endpointId this}}">Try</button>
                        </div>
                        <div class="endpoint-details">
                            {{#if description}}
                            <div class="detail-section">
                                <h4 class="detail-title">Description</h4>
                                <p>{{description}}</p>
                            </div>
                            {{/if}}
                            
                            {{#if tags}}
                            <div class="detail-section">
                                <h4 class="detail-title">Tags</h4>
                                <p>{{formatTags tags}}</p>
                            </div>
                            {{/if}}
                            
                            {{#if parameters}}
                            <div class="detail-section">
                                <h4 class="detail-title">Parameters</h4>
                                <div class="overflow-x-auto">
                                    <table class="params-table">
                                        <thead>
                                            <tr>
                                                <th>Name</th>
                                                <th>Type</th>
                                                <th>In</th>
                                                <th>Required</th>
                                                <th>Description</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            {{#each parameters}}
                                            <tr>
                                                <td class="param-name">{{name}}</td>
                                                <td>{{type}}</td>
                                                <td>{{in}}</td>
                                                <td>{{#if required}}Yes{{else}}No{{/if}}</td>
                                                <td>{{description}}</td>
                                            </tr>
                                            {{/each}}
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            {{/if}}
                            
                            {{#if responses}}
                            <div class="detail-section">
                                <h4 class="detail-title">Responses</h4>
                                {{#each responses}}
                                <div class="response-item">
                                    <span class="response-status">{{statusCode}}</span>
                                    <span class="response-description">{{description}}</span>
                                </div>
                                {{/each}}
                            </div>
                            {{/if}}
                        </div>
                    </div>
                </section>
                {{/each}}
            {{/if}}
        </main>
    </div>

    <!-- API Testing Side Panel -->
    <div class="api-panel" id="apiPanel">
        <div class="api-panel-header">
            <div class="api-panel-title-section">
                <h3 class="api-panel-title">API Testing</h3>
                <div class="api-panel-subtitle" id="apiPanelSubtitle">Select an endpoint to test</div>
            </div>
            <button class="close-panel-btn" id="closePanelBtn">✕</button>
        </div>
        
        <div class="api-panel-content">
            <!-- Request Section -->
            <div class="request-section">
                <h4 class="section-title">Request</h4>
                
                <div class="request-url-section">
                    <label class="input-label">Method & URL</label>
                    <div class="url-input-group">
                        <select class="method-select" id="requestMethod">
                            <option value="GET">GET</option>
                            <option value="POST">POST</option>
                            <option value="PUT">PUT</option>
                            <option value="PATCH">PATCH</option>
                            <option value="DELETE">DELETE</option>
                        </select>
                        <input type="text" class="url-input" id="requestUrl" placeholder="Enter request URL">
                    </div>
                </div>
                
                <div class="headers-section">
                    <label class="input-label">Headers</label>
                    <div class="headers-form" id="headersForm">
                        <!-- Headers will be dynamically populated here -->
                    </div>
                    <button type="button" class="add-header-btn" id="addHeaderBtn">+ Add Header</button>
                </div>
                
                <div class="query-section" id="querySection" style="display: none;">
                    <label class="input-label">Query Parameters</label>
                    <div class="query-form" id="queryForm">
                        <!-- Query parameters will be dynamically populated here -->
                    </div>
                    <button type="button" class="add-query-btn" id="addQueryBtn">+ Add Parameter</button>
                </div>
                
                <div class="body-section">
                    <label class="input-label">Request Body</label>
                    <textarea class="body-textarea" id="requestBody" placeholder='{"key": "value"}'></textarea>
                </div>
                
                <button class="send-button" id="sendRequestBtn">Send Request</button>
            </div>
            
            <!-- Response Section -->
            <div class="response-section">
                <div class="response-header">
                    <h4 class="section-title">Response</h4>
                    <button class="export-button" id="exportResponseBtn" disabled>Export JSON</button>
                </div>
                
                <div class="response-status">
                    <label class="input-label">Status Code</label>
                    <div class="status-display" id="responseStatus">-</div>
                </div>
                
                <div class="response-headers">
                    <label class="input-label">Response Headers</label>
                    <textarea class="response-textarea" id="responseHeaders" readonly placeholder="Response headers will appear here..."></textarea>
                </div>
                
                <div class="response-body">
                    <label class="input-label">Response Body</label>
                    <textarea class="response-textarea" id="responseBody" readonly placeholder="Response body will appear here..."></textarea>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-core.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/autoloader/prism-autoloader.min.js"></script>
    <script>
        // Inline JavaScript from services
        {{{sidebarJS}}}
        {{{environmentJS}}}
    </script>
    <!-- Import the main docs.js file with all interactive functionality -->
    <script>
        // Load docs.js from assets
        const script = document.createElement('script');
        script.src = './assets/docs.js';
        script.onload = function() {
            console.log('📄 Documentation interactive features loaded');
        };
        script.onerror = function() {
            console.warn('⚠️ Could not load docs.js - some interactive features may not work');
        };
        document.head.appendChild(script);
        
        // Initialize theme from URL parameter or localStorage
        document.addEventListener('DOMContentLoaded', function() {
            // Check for theme parameter in URL
            const urlParams = new URLSearchParams(window.location.search);
            const themeParam = urlParams.get('theme');
            
            if (themeParam && (themeParam === 'light' || themeParam === 'dark')) {
                // Apply theme from URL parameter
                document.body.className = themeParam;
                
                // Save to localStorage
                localStorage.setItem('api-docs-theme', themeParam);
                console.log(`🎨 Theme set from URL parameter: ${themeParam}`);
            } else {
                // Use server-side theme or default from localStorage
                const savedTheme = localStorage.getItem('api-docs-theme');
                const defaultTheme = '{{theme.mode}}' || 'light';
                const currentTheme = savedTheme || defaultTheme;
                
                document.body.className = currentTheme;
                console.log(`🎨 Theme initialized: ${currentTheme}`);
            }
            
            // Update theme toggle icon
            updateThemeToggleIcon();
        });
        
        // Function to update theme toggle icon
        function updateThemeToggleIcon() {
            const themeToggle = document.querySelector('.theme-toggle');
            if (themeToggle) {
                const currentTheme = document.body.className;
                const icon = currentTheme === 'light' ? '🌙' : '☀️';
                const title = currentTheme === 'light' ? 'Switch to Dark Mode' : 'Switch to Light Mode';
                
                themeToggle.innerHTML = icon;
                themeToggle.title = title;
            }
        }
        
        // Manual theme toggle function (fallback if docs.js doesn't load)
        function toggleTheme() {
            const currentTheme = document.body.className;
            const newTheme = currentTheme === 'light' ? 'dark' : 'light';
            
            document.body.className = newTheme;
            localStorage.setItem('api-docs-theme', newTheme);
            updateThemeToggleIcon();
            
            console.log(`🎨 Theme toggled to: ${newTheme}`);
        }
        
        // Navigation functionality
        document.addEventListener('DOMContentLoaded', function() {
            initializeCollapsibleNavigation();
            initializeNavigationScrollSpy();
        });
        
        function initializeCollapsibleNavigation() {
            // Handle expand/collapse all button
            const expandAllBtn = document.querySelector('.expand-all-btn');
            let allExpanded = false;
            
            if (expandAllBtn) {
                expandAllBtn.addEventListener('click', function() {
                    const sections = document.querySelectorAll('.nav-title.collapsible');
                    const modules = document.querySelectorAll('.nav-modules');
                    
                    allExpanded = !allExpanded;
                    
                    sections.forEach((title, index) => {
                        const moduleElement = modules[index];
                        if (allExpanded) {
                            moduleElement.classList.remove('collapsed');
                            title.classList.remove('collapsed');
                            title.setAttribute('aria-expanded', 'true');
                        } else {
                            moduleElement.classList.add('collapsed');
                            title.classList.add('collapsed');
                            title.setAttribute('aria-expanded', 'false');
                        }
                    });
                    
                    // Update button text and title
                    this.innerHTML = allExpanded ? '⊟' : '⊞';
                    this.title = allExpanded ? 'Collapse all sections' : 'Expand all sections';
                    
                    console.log(`📁 ${allExpanded ? 'Expanded' : 'Collapsed'} all sections`);
                });
            }
            
            // Handle section title clicks for collapsing/expanding and scrolling
            document.querySelectorAll('.nav-title.collapsible').forEach(title => {
                title.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    const modules = this.nextElementSibling;
                    const isCollapsed = modules.classList.contains('collapsed');
                    const targetId = this.getAttribute('data-target');
                    
                    // Toggle collapse state
                    if (isCollapsed) {
                        modules.classList.remove('collapsed');
                        this.classList.remove('collapsed');
                        this.setAttribute('aria-expanded', 'true');
                    } else {
                        modules.classList.add('collapsed');
                        this.classList.add('collapsed');
                        this.setAttribute('aria-expanded', 'false');
                    }
                    
                    // Also scroll to the section
                    if (targetId) {
                        const targetElement = document.querySelector(targetId);
                        if (targetElement) {
                            setTimeout(() => {
                                targetElement.scrollIntoView({
                                    behavior: 'smooth',
                                    block: 'start'
                                });
                            }, isCollapsed ? 300 : 0); // Wait for expansion animation
                        }
                    }
                    
                    console.log(`📂 Section ${isCollapsed ? 'expanded' : 'collapsed'}: ${this.querySelector('.section-name').textContent}`);
                });
                
                // Start with sections collapsed
                const modules = title.nextElementSibling;
                modules.classList.add('collapsed');
                title.classList.add('collapsed');
            });
            
            // Handle module link clicks
            document.querySelectorAll('.nav-item[href^="#"]').forEach(link => {
                link.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    const targetId = this.getAttribute('href').substring(1);
                    const targetElement = document.getElementById(targetId);
                    
                    if (targetElement) {
                        // Remove active class from all nav items
                        document.querySelectorAll('.nav-item').forEach(item => item.classList.remove('active'));
                        
                        // Add active class to clicked item
                        this.classList.add('active');
                        
                        // Scroll to target
                        targetElement.scrollIntoView({
                            behavior: 'smooth',
                            block: 'start'
                        });
                        
                        console.log(`🎯 Navigating to module: ${targetId}`);
                    }
                });
            });
        }
        
        function initializeNavigationScrollSpy() {
            const sectionTitles = document.querySelectorAll('.nav-title[data-target]');
            const navItems = document.querySelectorAll('.nav-item[href^="#"]');
            
            function updateActiveNavigation() {
                const scrollY = window.scrollY;
                
                // Check sections
                sectionTitles.forEach(title => {
                    const targetId = title.getAttribute('data-target').substring(1);
                    const targetElement = document.getElementById(targetId);
                    
                    if (targetElement) {
                        const rect = targetElement.getBoundingClientRect();
                        const elementTop = scrollY + rect.top;
                        const elementBottom = elementTop + rect.height;
                        
                        if (scrollY >= elementTop - 100 && scrollY < elementBottom + 100) {
                            // Remove active from all section titles
                            sectionTitles.forEach(t => t.classList.remove('active'));
                            title.classList.add('active');
                        }
                    }
                });
                
                // Check modules
                navItems.forEach(item => {
                    const targetId = item.getAttribute('href').substring(1);
                    const targetElement = document.getElementById(targetId);
                    
                    if (targetElement) {
                        const rect = targetElement.getBoundingClientRect();
                        const elementTop = scrollY + rect.top;
                        const elementBottom = elementTop + rect.height;
                        
                        if (scrollY >= elementTop - 100 && scrollY < elementBottom - 50) {
                            // Remove active from all nav items
                            navItems.forEach(i => i.classList.remove('active'));
                            item.classList.add('active');
                        }
                    }
                });
            }
            
            // Throttled scroll listener
            let ticking = false;
            window.addEventListener('scroll', function() {
                if (!ticking) {
                    requestAnimationFrame(updateActiveNavigation);
                    ticking = true;
                }
            });
            
            // Initialize on load
            updateActiveNavigation();
        }
        
        // Keyboard navigation support
        document.addEventListener('keydown', function(e) {
            // Only handle when focus is on navigation elements
            if (!e.target.closest('.sidebar')) return;
            
            switch(e.key) {
                case 'ArrowUp':
                case 'ArrowDown':
                    e.preventDefault();
                    navigateWithArrowKeys(e.key === 'ArrowUp' ? -1 : 1);
                    break;
                case 'Enter':
                case ' ':
                    if (e.target.classList.contains('nav-title')) {
                        e.preventDefault();
                        e.target.click();
                    }
                    break;
                case 'Escape':
                    // Collapse all sections
                    document.querySelectorAll('.nav-modules').forEach(module => {
                        module.classList.add('collapsed');
                    });
                    document.querySelectorAll('.nav-title.collapsible').forEach(title => {
                        title.classList.add('collapsed');
                    });
                    break;
            }
        });
        
        function navigateWithArrowKeys(direction) {
            const focusableElements = document.querySelectorAll('.nav-title, .nav-item');
            const currentIndex = Array.from(focusableElements).findIndex(el => el === document.activeElement);
            
            if (currentIndex !== -1) {
                const nextIndex = Math.max(0, Math.min(focusableElements.length - 1, currentIndex + direction));
                focusableElements[nextIndex].focus();
            } else if (focusableElements.length > 0) {
                focusableElements[0].focus();
            }
        }
    </script>
</body>
</html> 